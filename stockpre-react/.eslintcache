[{"/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/index.js":"1","/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/reportWebVitals.js":"2","/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/navigation/index.js":"3","/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/stocks/index.js":"4","/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/stocks/buttons.js":"5","/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/stocks/lookup.js":"6","/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/navigation/lookup.js":"7","/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/stocks/components.js":"8","/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/navigation/search.js":"9","/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/navigation/components.js":"10","/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/stocks/detail.js":"11","/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/stocks/list.js":"12","/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/lookup/index.js":"13","/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/lookup/components.js":"14"},{"size":1484,"mtime":1614509252152,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1612374444543,"results":"17","hashOfConfig":"16"},{"size":248,"mtime":1612374444543,"results":"18","hashOfConfig":"16"},{"size":367,"mtime":1612374444543,"results":"19","hashOfConfig":"16"},{"size":879,"mtime":1614503730488,"results":"20","hashOfConfig":"16"},{"size":1345,"mtime":1614222748794,"results":"21","hashOfConfig":"16"},{"size":381,"mtime":1612374444543,"results":"22","hashOfConfig":"16"},{"size":5864,"mtime":1614508894235,"results":"23","hashOfConfig":"16"},{"size":2088,"mtime":1614512545718,"results":"24","hashOfConfig":"16"},{"size":2237,"mtime":1614509222708,"results":"25","hashOfConfig":"16"},{"size":1589,"mtime":1614510389083,"results":"26","hashOfConfig":"16"},{"size":1369,"mtime":1614507129670,"results":"27","hashOfConfig":"16"},{"size":72,"mtime":1612374444543,"results":"28","hashOfConfig":"16"},{"size":1622,"mtime":1612374444543,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"rrxklt",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/index.js",[],["61","62"],"/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/reportWebVitals.js",[],"/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/navigation/index.js",[],"/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/stocks/index.js",[],"/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/stocks/buttons.js",[],"/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/stocks/lookup.js",[],"/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/navigation/lookup.js",[],"/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/stocks/components.js",["63","64"],"import React, { useState, useEffect } from 'react'\n\nimport { apiStockLookup, apiPredictionLookup } from './lookup'\nimport { Stock } from './detail'\nimport { StockList } from './list'\nimport { ActionButton } from './buttons'\n\n//Stock link component, redirects to the stock when clicked\nexport function StockLink (props) {\n  const {stock} = props\n  const handleStockLink = (event) => {\n    event.preventDefault()\n    window.location.href = `/stocks/${stock.ticker}`\n  }\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.type = \"text/javascript\";\n    script.src = \"https://s3.tradingview.com/external-embedding/embed-widget-single-quote.js\";\n    script.async = true;\n    script.innerHTML = `{\n      \"symbol\": \"NASDAQ:${stock.ticker}\",\n      \"width\": 350,\n      \"colorTheme\": \"light\",\n      \"isTransparent\": false,\n      \"locale\": \"en\"\n    }`\n    document.body.appendChild(script);\n    return () => {\n      try {\n        document.body.removeChild(script);\n      } catch {\n        console.log(\"Failed\")\n      }\n    }\n  })\n  return <div onClick={handleStockLink}><div class='tradingview-widget-container'>\n    <div class=\"tradingview-widget-container__widget\"></div>\n    </div></div>;\n}\n/*\n<div class=\"tradingview-widget-copyright\">\n      <a href={`https://www.tradingview.com/symbols/NASDAQ-${stock.ticker}/`} rel=\"noopener\" target=\"_blank\">\n        <span class=\"blue-text\">{stock.ticker} Price Today</span>\n      </a> by TradingView\n    </div>\n*/\n\n//Wrapper for stock list, handleNewStock is a callback for if a stock is added\n//While on stock page, but is not required right now\nexport function StockListComponent (props) {\n  const [newStocks, setNewStocks] = useState([])\n  const handleNewStock = (newStock) => {\n    let tempNewStocks = [...newStocks]\n    tempNewStocks.unshift(newStock)\n    setNewStocks(tempNewStocks)\n  }\n  return <div className={props.className}>\n    <StockList newStocks={newStocks} {...props} />\n  </div>\n}\n\n//Heres the fun stuff\n//Handles the entire stock detail page\n//probably has alot of room for abstraction\nexport function StockDetailComponent(props) {\n  const {tickerinit} = props //This is dumb, but i cannot find another way to do it. Ticker must be passed by props\n  const [didStockLookup, setDidStockLookup] = useState(false) //have we checked to see if the user tracks the stock?\n  const [ticker, setTicker] = useState(null) //if we have checked to see if we track the stock,\n                                            // set the ticker again, this is done to make sure nothing is rendered before we perform the lookup\n  const [isTracking, setIsTracking] = useState(false) //Is the user tracking the stock\n  const [hasPrediction, setHasPrediction] = useState(false) //Does the user have a prediction for this stock?\n  const [prediction, setPrediction] = useState(null) //What is the actual prediction\n  const [didPredictionLookup, setDidPredictionLookup] = useState(false) //Did we do the prediction lookup\n\n  // Used when we make api call to see if we track the stock\n  const handleBackendStockLookup = (response, status) => {\n    if (status === 200) {\n      setTicker(response.ticker)\n      setIsTracking(response.is_tracking)\n    } else {\n      alert('Error finding stock')\n    }\n  }\n\n  // Used when we see if the stock has a prediction\n  const handleBackendPredictionLookup = (response, status) => {\n    if (status === 200) {\n      setPrediction(response.future_value)\n      setHasPrediction(true)\n      setDidPredictionLookup(true)\n    } else {\n      alert('Unable to find prediction')\n    }\n  }\n\n  // Used when we hit an action button\n  const handleActionBackend = (response, status) => {\n    //Status 200 means success, but nothing created\n    //if we are tracking, hitting the button again would\n    //untrack, so set appropriate states\n    if (status === 200 && isTracking) {\n      setIsTracking(false)\n      setHasPrediction(false)\n      setPrediction(null)\n      //setTicker(response.ticker)\n    } \n    //Reverse of above\n    else if (status === 200 && !isTracking) {\n        setIsTracking(true)\n    } \n    // status 201 means something was made, this is the new prediction\n    // Also must be tracking to get a prediction\n    // Is tracking is likely handled in button as well\n    else if (status === 201 && isTracking) {\n      setPrediction(response.future_value)\n      setHasPrediction(true)\n    } else {\n      alert('cant add/remove')\n    }\n  }\n\n  //does stock lookup upon page rendering\n  useEffect(() => {\n    if (didStockLookup === false) {\n      apiStockLookup(tickerinit, handleBackendStockLookup)\n      setDidStockLookup(true)\n    }\n\n  }, [tickerinit, didStockLookup, setDidStockLookup])\n  // Renders the ticker, prediction if it exists, add/remove button, get prediction button if tracking\n  return ticker === null ? null :<div> \n    <Stock ticker={ticker} className={props.className} />\n    <PredictionComponent ticker={ticker} didPredictionLookup={didPredictionLookup} prediction={prediction} handleBackendPredictionLookup={handleBackendPredictionLookup} />\n    <ActionButton ticker={ticker} predict={false} isTracking={isTracking} handleActionBackend={handleActionBackend}/> \n    {isTracking && <ActionButton ticker={ticker} predict={true} isTracking={isTracking} handleActionBackend={handleActionBackend}/>}\n  </div>\n}\n\n// Basic component for a prediction, has callbacks to handle a backend prediction lookup being performed\nfunction PredictionComponent (props) {\n  const {ticker, prediction, didPredictionLookup, handleBackendPredictionLookup} = props\n  \n  //If we have not done a prediction lookup, do it when page renders\n  useEffect(() => {\n    if (!didPredictionLookup) {\n      apiPredictionLookup(ticker, handleBackendPredictionLookup)\n    }\n  })\n  // Returns the prediction if we have one\n  return prediction !== null ? <div>Prediction: {prediction}</div> : null\n}","/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/navigation/search.js",["65"],"/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/navigation/components.js",[],"/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/stocks/detail.js",["66","67"],"import React, { useEffect } from 'react'\n//Simple component all it does is display the ticker for a stock\nexport function Stock(props) {\n    const {ticker} = props\n    console.log(ticker);\n    useEffect(() => {\n        const script1 = document.createElement(\"script\");\n        script1.type = \"text/javascript\";\n        script1.src = \"https://s3.tradingview.com/tv.js\";\n        const script2 = document.createElement(\"script\");\n        script2.type = \"text/javascript\";\n        script2.innerHTML = `new TradingView.widget({\n        \"autosize\": true,\n        \"symbol\": \"${ ticker }\",\n        \"interval\": \"D\",\n        \"timezone\": \"Etc/UTC\",\n        \"theme\": \"light\",\n        \"style\": \"1\",\n        \"locale\": \"en\",\n        \"toolbar_bg\": \"#f1f3f6\",\n        \"enable_publishing\": false,\n        \"hide_top_toolbar\": true,\n        \"hide_legend\": true,\n        \"save_image\": false,\n        \"container_id\": \"tradingview_29472\"\n        });`\n        script1.appendChild(script2);\n        document.body.appendChild(script1);\n        return () => {\n            try {\n            script1.removeChild(script2);\n            document.body.removeChild(script1);\n            } catch {}\n        }\n    }, []);\n    return <div class=\"tradingview-widget-container\" style={{padding: 40 + 'px'}}>\n        <div id=\"tradingview_29472\"></div>\n        <div class=\"tradingview-widget-copyright\">\n            <a href={`https://www.tradingview.com/symbols/${ ticker }/`} rel=\"noopener\" target=\"_blank\">\n                <span class=\"blue-text\">{ticker} Chart</span>\n            </a> by TradingView\n        </div>\n    </div>\n}","/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/stocks/list.js",[],"/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/lookup/index.js",[],"/home/aaronthenerd/Documents/Projects/StockPrediction/stockpre-react/src/lookup/components.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":52,"column":9,"nodeType":"74","messageId":"75","endLine":52,"endColumn":23},{"ruleId":"72","severity":1,"message":"76","line":71,"column":10,"nodeType":"74","messageId":"75","endLine":71,"endColumn":23},{"ruleId":"72","severity":1,"message":"77","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":35,"column":8,"nodeType":"80","endLine":35,"endColumn":10,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":39,"column":13,"nodeType":"84","endLine":39,"endColumn":105},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'handleNewStock' is assigned a value but never used.","Identifier","unusedVar","'hasPrediction' is assigned a value but never used.","'StockLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ticker'. Either include it or remove the dependency array.","ArrayExpression",["87"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},"Update the dependencies array to be: [ticker]",{"range":"90","text":"91"},[1181,1183],"[ticker]"]