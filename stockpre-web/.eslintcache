[{"C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\index.js":"1","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\reportWebVitals.js":"2","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\navigation\\index.js":"3","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\index.js":"4","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\navigation\\lookup.js":"5","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\navigation\\search.js":"6","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\navigation\\components.js":"7","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\buttons.js":"8","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\lookup.js":"9","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\components.js":"10","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\App.js":"11","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\list.js":"12","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\detail.js":"13","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\lookup\\index.js":"14","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\datafeed.js":"15","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\charting_library\\charting_library.esm.js":"16","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\streaming.js":"17","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\lookup\\components.js":"18","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\ENV.js":"19"},{"size":1291,"mtime":1619323976000,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1619323976000,"results":"22","hashOfConfig":"21"},{"size":287,"mtime":1619323976000,"results":"23","hashOfConfig":"21"},{"size":367,"mtime":1619323976000,"results":"24","hashOfConfig":"21"},{"size":211,"mtime":1619323976000,"results":"25","hashOfConfig":"21"},{"size":3245,"mtime":1619323976000,"results":"26","hashOfConfig":"21"},{"size":4548,"mtime":1619323976000,"results":"27","hashOfConfig":"21"},{"size":1025,"mtime":1619323976000,"results":"28","hashOfConfig":"21"},{"size":641,"mtime":1619323976000,"results":"29","hashOfConfig":"21"},{"size":9067,"mtime":1619453666543,"results":"30","hashOfConfig":"21"},{"size":634,"mtime":1619323976000,"results":"31","hashOfConfig":"21"},{"size":2139,"mtime":1619323976000,"results":"32","hashOfConfig":"21"},{"size":4914,"mtime":1619323976000,"results":"33","hashOfConfig":"21"},{"size":72,"mtime":1619323976000,"results":"34","hashOfConfig":"21"},{"size":4221,"mtime":1619323976000,"results":"35","hashOfConfig":"21"},{"size":12276,"mtime":1619323976000,"results":"36","hashOfConfig":"21"},{"size":3791,"mtime":1619323976000,"results":"37","hashOfConfig":"21"},{"size":1528,"mtime":1619323976000,"results":"38","hashOfConfig":"21"},{"size":137,"mtime":1619323976000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1qwmthl",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\index.js",["86"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n//import App from './App';\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { StockDetailComponent, StockListComponent } from \"./stocks\";\nimport { NavigationComponent, HeaderComponent, TestCsvComponent } from \"./navigation\";\n\nconst e = React.createElement;\n\nconst stocksListEl = document.getElementById(\"stocks-list\");\nif (stocksListEl) {\n  ReactDOM.render(e(StockListComponent, stocksListEl.dataset), stocksListEl);\n}\n\nconst navigationEl = document.getElementById(\"navbar\");\nif (navigationEl) {\n  ReactDOM.render(e(NavigationComponent, navigationEl.dataset), navigationEl);\n}\n\nconst stockDetailElements = document.querySelectorAll(\".stock-detail\");\nstockDetailElements.forEach((container) => {\n  ReactDOM.render(e(StockDetailComponent, container.dataset), container);\n});\n\n// Max material UI\n\nconst testEl = document.getElementById(\"test\");\nif (testEl) {\n  ReactDOM.render(e(HeaderComponent, testEl.dataset), testEl)\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["87","88"],"C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\reportWebVitals.js",[],"C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\navigation\\index.js",[],"C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\index.js",[],"C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\navigation\\lookup.js",[],"C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\navigation\\search.js",["89","90","91","92"],"import { fade, InputBase, makeStyles, TextField } from \"@material-ui/core\";\nimport { SearchRounded } from \"@material-ui/icons\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport React, { useState, useEffect } from \"react\";\n\nimport { apiStockSearch } from \"./lookup\";\n\nexport function StockSearchComponent(props) {\n  const classes = useStyles();\n  const [searchTerm, setSearchTerm] = useState(undefined);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearchTermChange = (event, value) => {\n    if (event && event.type === 'change') {\n      console.log(\"TYPED: \", event.target.value)\n      setSearchTerm(event.target.value);\n    } else {\n      console.log(\"AUTO SEARCH: \", value);\n      setSearchTerm(value);\n    }\n    console.log(\"SEARCHTERM: \", searchTerm);\n  };\n\n  const handleSearchSubmit = (event) => {\n    console.log(\"SEARCH SUBMIT: \", event);\n    console.log(searchTerm);\n    event.preventDefault();\n    let regex = /([^-]+) - .*/;\n    const match = searchTerm.match(regex);\n    if (match.length === 0) {\n      window.location.href = `/stocks/${searchTerm.toUpperCase()}`\n      return;\n    }\n    window.location.href = `/stocks/${match[1].toUpperCase()}`\n  };\n\n  const handleSearchTermLookup = (response, status) => {\n    if (status === 200) {\n      setSearchResults([...response]);\n      console.log(\"SEARCH RESULTS: \", searchResults);\n    } else if (status === 403) {\n      alert(\"Unauthorized, must login to access\");\n    } else {\n      alert(\"Error finding stock, status:\", status);\n    }\n  };\n\n  useEffect(() => {\n    apiStockSearch(searchTerm, handleSearchTermLookup);\n  }, [searchTerm]);\n\n  return (\n    <form style={{padding: \"0px 10% 0px 10%\",width: \"75%\"}} onSubmit={handleSearchSubmit}>\n      <Autocomplete \n        id=\"demo\" \n        value={searchTerm}\n        freeSolo\n        options={searchResults.map((option) => {\n          return option.ticker + \" - \" + option.company_name\n        })}\n        getOptionLabel={option => option}\n        getOptionSelected={(option, value) => option === value.ticker}\n        onChange={handleSearchTermChange} \n        onInputChange={(event) => handleSearchTermChange(event, undefined)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Ticker\"\n            margin=\"normal\"\n            variant=\"outlined\"\n          /> \n        )}\n      />\n    </form>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: \"relative\",\n    borderRadius: \"50px\",\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"50%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"50%\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0,2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    padding: theme.spacing(3, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n  },\n}));\n","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\navigation\\components.js",["93","94"],"import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { StockSearchComponent } from \"./search\";\n\n// Max and Ahmed Material UI\nimport { AppBar, IconButton, Toolbar, List, ListItem, ListItemText, makeStyles, Container, useScrollTrigger, Link, Zoom, Fab } from \"@material-ui/core\";\nimport { HomeRounded, KeyboardArrowUpRounded } from \"@material-ui/icons\";\nimport { PropTypes } from \"prop-types\";\nimport Papa from \"papaparse\";\nimport fs from \"fs\";\n\nconst navLinks = [\n  { title: \"Profile\", path: \"/profile\" },\n  { title: \"Logout\", path: \"/logout\" },\n]\n\nconst useStyles = makeStyles((theme) => ({\n  colorScheme: {\n    background: \"linear-gradient(180deg, #FE6B8B 30%, #E8A87C 90%)\"\n  },\n  navDisplayFlex: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  navbarDisplayFlex: {\n    display: \"flex\",\n    justifyContent: \"space-between\"\n  },\n  linkText: {\n    textDecoration: \"none\",\n    textTransform: \"none\",\n    color: \"white\",\n    \"&:hover\": {\n      color: \"white\",\n      textDecoration: \"none\"\n    }\n  },\n  scrollTop: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  }\n}));\n\nexport const HeaderComponent = (props) => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Toolbar id=\"back-to-top-anchor\"/>\n      <ElevationScroll {...props}>\n        <AppBar className={classes.colorScheme}>\n          <Toolbar id=\"back-to-top-anchor\">\n            <Container maxWidth=\"xl\" className={classes.navbarDisplayFlex}>\n              <IconButton href=\"/\" className={classes.linkText} edge=\"start\" color=\"inherit\" aria-label=\"home\">\n                <HomeRounded fontSize=\"large\"/>\n              </IconButton>\n              <StockSearchComponent/>\n              <List component=\"nav\" aria-labelledby=\"main navigation\" className={classes.navDisplayFlex}>\n                {navLinks.map(({ title, path }) => (\n                  <Link href={path} key={title} className={classes.linkText} underline=\"always\">\n                    <ListItem button>\n                      <ListItemText primary={title}/>\n                    </ListItem>\n                  </Link>\n                ))}\n              </List>\n            </Container>\n          </Toolbar>\n        </AppBar>\n      </ElevationScroll>\n      <ScrollTop {...props}>\n        <Fab className={classes.colorScheme} size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpRounded/>\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n\nfunction ElevationScroll(props) {\n  const { children } = props;\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0\n  });\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100\n  });\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\"#back-to-top-anchor\");\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\"});\n    }\n  };\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.scrollTop}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  window: PropTypes.func,\n};\n\n// Working code\nexport function StockLink(props) {\n  const { stock } = props;\n  const handleStockLink = (event) => {\n    event.preventDefault();\n    window.location.href = `/stocks/${stock.ticker}`;\n  };\n  return <span onClick={handleStockLink}>{stock.ticker} </span>;\n}\n\nexport function NavigationComponent(props) {\n  return (\n    <Container>\n      <Row className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\n        <Col>\n          {\" \"}\n          <StockSearchComponent />{\" \"}\n        </Col>\n        <Col>\n          {\" \"}\n          <HomeLink />{\" \"}\n        </Col>\n        <Col>\n          {\" \"}\n          <ProfileLink />{\" \"}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nfunction HomeLink(props) {\n  const handleHomeLink = (event) => {\n    event.preventDefault();\n    window.location.href = \"/\";\n  };\n  return <span onClick={handleHomeLink}>Home</span>;\n}\n\nfunction ProfileLink(props) {\n  const handleProfileLink = (event) => {\n    event.preventDefault();\n    window.location.href = \"/profile\";\n  };\n  return <span onClick={handleProfileLink}>Profile</span>;\n}\n","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\buttons.js",["95"],"import React from 'react'\nimport {apiStockAction} from './lookup'\n\nimport { Button, makeStyles, fade } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        background: 'linear-gradient(180deg, #FE6B8B 30%, #E8A87C 90%)',\n        marginLeft: '5px',\n        marginRight: '5px',\n        borderRadius: '50px',\n        \"&:hover\": {\n            background: 'linear-gradient(180deg, #FE6B8B 0%, #E8A87C 0%)',\n        }\n    }\n}));\n\nexport function ActionButton (props) {\n    const classes = useStyles();\n    const {ticker, isTracking, predict, handleActionBackend} = props\n\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiStockAction(ticker, predict, handleActionBackend)\n    }\n    const display = isTracking === true ? 'Remove' : 'Add'\n    return predict === true ? <Button variant=\"contained\" className={classes.button} onClick={handleClick}>Predict</Button> : <Button variant=\"contained\" className={classes.button} onClick={handleClick}> {display} </Button>\n}","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\lookup.js",[],"C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\components.js",["96","97","98"],"C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\App.js",[],"C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\list.js",["99"],"import React, { useEffect, useState } from \"react\";\n\nimport { apiStockList } from \"./lookup\";\n\nimport { StockLink } from \"./components\";\n\nexport function StockList(props) {\n  const [stocksInit, setStocksInit] = useState([]);\n  const [stocks, setStocks] = useState([]);\n  const [stocksDidSet, setStocksDidSet] = useState(false);\n  const [hasPrediction, setHasPrediction] = useState(false);\n  const [prediction, setPrediction] = useState(null);\n  const [didPredictionLookup, setDidPredictionLookup] = useState(false);\n\n  const handleBackendPredictionLookup = (response, status) => {\n    if (status === 200) {\n      const responsePrediction = response.prediction;\n      const newPrediction =\n        responsePrediction !== null\n          ? {\n              future_value: responsePrediction.future_value,\n              upper_value: responsePrediction.upper_value,\n              lower_value: responsePrediction.lower_value,\n              prediction_date: response.prediction_date,\n            }\n          : null;\n      setPrediction(newPrediction);\n      setHasPrediction(true);\n      setDidPredictionLookup(true);\n    } else {\n      alert(\"Unable to find prediction\");\n    }\n  };\n\n  useEffect(() => {\n    const final = [...props.newStocks].concat(stocksInit);\n    if (final.length !== stocks.length) {\n      setStocks(final);\n    }\n  }, [props.newStocks, stocks, stocksInit]);\n\n  useEffect(() => {\n    if (stocksDidSet === false) {\n      const handleStockListLookup = (response, status) => {\n        if (status === 200) {\n          setStocksInit([...response]);\n          setStocksDidSet(true);\n        } else {\n          alert(\"Error, status:\", status);\n        }\n      };\n      apiStockList(handleStockListLookup);\n    }\n  }, [stocksInit, stocksDidSet, setStocksDidSet]);\n\n  return (\n    <div>\n      {stocks !== null &&\n        stocks.map((item, index) => <StockLink \n          key={index}\n          stock={item}\n          length={stocks.length}\n          didPredictionLookup={didPredictionLookup}\n          prediction={prediction}\n          handleBackendPredictionLookup={handleBackendPredictionLookup}/>\n        )\n      }\n    </div>\n  );\n}\n","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\detail.js",["100","101"],"import { widget } from '../charting_library';\nimport React, { useEffect } from \"react\";\nimport Datafeed from \"./datafeed.js\"\nimport { apiPredictionLookup } from \"./lookup\";\nimport { Card, CardContent, makeStyles } from '@material-ui/core';\n\nfunction getLanguageFromURL() {\n\tconst regex = new RegExp('[\\\\?&]lang=([^&#]*)');\n\tconst results = regex.exec(window.location.search);\n\treturn results === null ? null : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\nfunction americanDateToUnixTimestamp(date) {\n\t// mm/dd/yyyy to yyyy-mm-dd to Javascript timestamp (ms) to Unix timestamp (s)\n\tlet fields = date.split('/');\n\tdate = fields[2] + '-' + fields[0] + '-' + fields[1];\n\treturn new Date(date).getTime() / 1000;\n}\n\nconst defaultSettings = {\n\tsymbol: 'AAPL',\n\tinterval: 'D',\n\tcontainerId: 'tv_chart_container',\n\tdatafeedUrl: 'https://demo_feed.tradingview.com',\n\tlibraryPath: '/static/js/charting_library/',\n\tchartsStorageUrl: 'https://saveload.tradingview.com',\n\tchartsStorageApiVersion: '1.1',\n\tclientId: 'tradingview.com',\n\tuserId: 'public_user_id',\n\tfullscreen: false,\n\tautosize: false,\n\tstudiesOverrides: {},\n};\nlet currPrediction = null;\nlet tvWidget = null;\n\nexport function Stock(props) {\n\tconst {\n\t\tsymbol,\n\t\tprediction,\n\t\tdidPredictionLookup,\n\t\thandleBackendPredictionLookup\n\t} = props;\n\tconst classes = useStyles();\n\tuseEffect(() => {\n\t\tconst widgetOptions = {\n\t\t\tsymbol: symbol ? symbol : defaultSettings.symbol, // Could throw warning here\n\t\t\t// BEWARE: no trailing slash is expected in feed URL\n\t\t\tdatafeed: Datafeed,\n\t\t\tinterval: defaultSettings.interval,\n\t\t\tcontainer_id: defaultSettings.containerId,\n\t\t\tlibrary_path: defaultSettings.libraryPath,\n\t\t\tlocale: getLanguageFromURL() || 'en',\n\t\t\tdisabled_features: [\n\t\t\t\t'use_localstorage_for_settings', \n\t\t\t\t'left_toolbar', \n\t\t\t\t'header_symbol_search', \n\t\t\t\t'display_market_status', \n\t\t\t\t'header_screenshot', \n\t\t\t\t'header_compare', \n\t\t\t\t'header_indicators', \n\t\t\t\t'compare_symbol', \n\t\t\t\t'header_saveload', \n\t\t\t\t'create_volume_indicator_by_default', \n\t\t\t\t'control_bar', \n\t\t\t\t'show_chart_property_page', \n\t\t\t\t'countdown'\n\t\t\t],\n\t\t\tenabled_features: ['study_templates'],\n\t\t\tcharts_storage_url: defaultSettings.chartsStorageUrl,\n\t\t\tcharts_storage_api_version: defaultSettings.chartsStorageApiVersion,\n\t\t\tclient_id: defaultSettings.clientId,\n\t\t\tuser_id: defaultSettings.userId,\n\t\t\tfullscreen: defaultSettings.fullscreen,\n\t\t\tautosize: defaultSettings.autosize,\n\t\t\tstudies_overrides: defaultSettings.studiesOverrides,\n\t\t};\n\t\ttvWidget = new widget(widgetOptions);\n\t\tif (didPredictionLookup === false && !currPrediction) {\n\t\t  apiPredictionLookup(symbol, handleBackendPredictionLookup);\n\t\t};\n\t\tif (prediction && !currPrediction) {\n\t\t\tcurrPrediction = prediction;\n\t\t\tconsole.log(\"prediction set\")\n\t\t\tconsole.log(currPrediction);\n\t\t}\n\t\tif (currPrediction !== null && tvWidget !== null) {\n\t\t\tconst currTime = new Date().getTime() / 1000;\n\t\t\tconst predTime = americanDateToUnixTimestamp(currPrediction.prediction_date);\n\t\t\ttvWidget.onChartReady(() => {\n\t\t\t\tconst chart = tvWidget.chart();\n\t\t\t\tconst {from, to} = chart.getVisibleRange();\n\t\t\t\tchart.setVisibleRange({from: from, to: predTime});\n\t\t\t\ttry {\n\t\t\t\t\tchart.createMultipointShape(\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\ttime: currTime,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}, \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttime: predTime,\n\t\t\t\t\t\t\tprice: currPrediction.upper_value,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}], \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshape: 'trend_line',\n\t\t\t\t\t\t\tlock: true,\n\t\t\t\t\t\t\toverrides: {\n\t\t\t\t\t\t\t\tlinecolor: '#00ff00',\n\t\t\t\t\t\t\t\tlinestyle: 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, null\n\t\t\t\t\t);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tchart.createMultipointShape(\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\ttime: currTime,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}, \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttime: predTime, \n\t\t\t\t\t\t\tprice: currPrediction.lower_value,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}], \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshape: 'trend_line', \n\t\t\t\t\t\t\tlock: true,\n\t\t\t\t\t\t\toverrides: {\n\t\t\t\t\t\t\t\tlinecolor: '#ff0000',\n\t\t\t\t\t\t\t\tlinestyle: 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, null\n\t\t\t\t\t);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tchart.createMultipointShape(\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\ttime: currTime,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}, \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttime: predTime, \n\t\t\t\t\t\t\tprice: currPrediction.future_value,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}], \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshape: 'trend_line', \n\t\t\t\t\t\t\tlock: true,\n\t\t\t\t\t\t\toverrides: {\n\t\t\t\t\t\t\t\tlinecolor: '#000000',\n\t\t\t\t\t\t\t\tlinestyle: 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, null\n\t\t\t\t\t);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t}\n\t\treturn () => {\n\t\t\tif (tvWidget !== null) {\n\t\t\t\ttvWidget.remove();\n\t\t\t\ttvWidget = null;\n\t\t\t}\n\t\t\tcurrPrediction = null;\n\t\t}\n\t}, [prediction]);\n\n\treturn (\n\t\t<div>\n\t\t\t<Card pb-2 className={classes.root}>\n\t\t\t\t<CardContent className={classes.content}>\n\t\t\t\t\t<div id={ defaultSettings.containerId } className={ 'TVChartContainer' }/>\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t</div>\n\n\t);\n}\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tmarginTop: '15px'\n\t},\n\tcontent: {\n\t\tborderRadius: '50px'\n\t}\n});","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\lookup\\index.js",[],"C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\datafeed.js",["102"],"import { subscribeOnStream, unsubscribeFromStream } from './streaming.js'\nimport { authToken } from '../App.js'\nconst finnhub = require('finnhub');\n\nconst api_key = finnhub.ApiClient.instance.authentications['api_key'];\napi_key.apiKey = authToken;\n\nconst lastBarsCache = new Map();\n\nconst configurationData = {\n    supported_resolutions: ['1D', '1W', '1M'], // Will need to check if these resolutions are valid\n    exchanges: [\n        {\n            value: 'NYSE',\n            name: 'NYSE',\n            desc: 'New York Stock Exchange'\n        }\n    ],\n    symbol_types: [\n        {\n            name: 'Common Stock',\n            value: 'stock'\n        }\n    ]\n};\n\nexport default {\n    onReady: (\n        callback\n    ) => {\n        setTimeout(() => callback(configurationData));\n    },\n    resolveSymbol: async (\n        symbolName,\n        onSymbolResolvedCallback,\n        onResolveErrorCallback\n    ) => {\n        const symbols = await (await fetch(`https://finnhub.io/api/v1/stock/symbol?exchange=US&token=${authToken}`)).json();\n        //console.log(\"SYMBOLS:\", symbols);\n        const symbolItem = symbols.find(({ displaySymbol }) => symbolName === displaySymbol);\n        //console.log(\"FOUND SYMBOL:\", symbolItem);\n        if (!symbolItem) {\n            onResolveErrorCallback(`Cannot resolve symbol: ${symbolName}`);\n            return;\n        }\n        const symbolInfo = {\n            ticker: symbolItem.symbol,\n            name: symbolItem.displaySymbol,\n            description: symbolItem.description,\n            type: symbolItem.type,\n            session: '24x7',\n            timezone: 'Etc/UTC',\n            exchange: \"NYSE\",\n            minmov: 1,\n            pricescale: 100,\n            has_intraday: false,\n            has_no_volume: true,\n            has_weekly_and_monthly: false,\n            supported_resolutions: configurationData.supported_resolutions,\n            volume_precision: 2,\n            data_status: 'streaming',\n        };\n        onSymbolResolvedCallback(symbolInfo);\n    },\n    getBars: async (\n        symbolInfo,\n        resolution,\n        from,\n        to,\n        onHistoryCallback,\n        onErrorCallback,\n        firstDataRequest\n    ) => {\n        const TV2FinnhubResolutions = {\"1D\":\"D\", \"1W\":\"W\", \"1M\":\"M\"};\n        const request = require('request');\n\n        await request(`https://finnhub.io/api/v1/stock/candle?symbol=${symbolInfo.ticker}&resolution=${TV2FinnhubResolutions[resolution]}&from=${from}&to=${to}&token=${authToken}`,\n            { json: true },\n            (error, response, data) => {\n                if (error) {\n                    onErrorCallback(error);\n                    return;\n                }\n                if (data[\"s\"] === \"no_data\") {\n                    onHistoryCallback([], {noData: true});\n                    return;\n                }\n                const len = data['t'].length;\n                let bars = [];\n                for (var i = 0; i < len; i += 1) {\n                    bars = [...bars, {\n                        time: data['t'][i] * 1000,\n                        low: data['l'][i],\n                        high: data['h'][i],\n                        open: data['o'][i],\n                        close: data['c'][i]\n                    }];\n                }\n                if (firstDataRequest) {\n                    lastBarsCache.set(symbolInfo.displaySymbol, { ...bars[bars.length - 1] })\n                }\n                //console.log(\"GETBARS:\", bars);\n                onHistoryCallback(bars, {noData: false});\n        }); \n    },\n    searchSymbols: async (\n        userInput,\n        exchange,\n        symbolType,\n        onResultReadyCallback\n    ) => {\n        console.log(\"SEARCHED\");\n    },\n    subscribeBars: (\n        symbolInfo,\n        resolution,\n        onRealtimeCallback,\n        subscribeUID,\n        onResetCacheNeededCallback\n    ) => {\n        subscribeOnStream(\n            symbolInfo.ticker,\n            resolution,\n            onRealtimeCallback,\n            subscribeUID,\n            onResetCacheNeededCallback,\n            lastBarsCache.get(symbolInfo.ticker)\n        );\n    },\n    unsubscribeBars: (\n        subscriberUID\n    ) => {\n        unsubscribeFromStream(subscriberUID);\n    }\n};\n","C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\charting_library\\charting_library.esm.js",[],"C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\stocks\\streaming.js",[],"C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\lookup\\components.js",[],"C:\\Users\\wrk\\Desktop\\StockPrediction-master\\stockpre-web\\src\\ENV.js",[],{"ruleId":"103","severity":1,"message":"104","line":10,"column":48,"nodeType":"105","messageId":"106","endLine":10,"endColumn":64},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"103","severity":1,"message":"111","line":1,"column":16,"nodeType":"105","messageId":"106","endLine":1,"endColumn":25},{"ruleId":"103","severity":1,"message":"112","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":23},{"ruleId":"103","severity":1,"message":"113","line":9,"column":9,"nodeType":"105","messageId":"106","endLine":9,"endColumn":16},{"ruleId":"114","severity":1,"message":"115","line":50,"column":6,"nodeType":"116","endLine":50,"endColumn":18,"suggestions":"117"},{"ruleId":"103","severity":1,"message":"118","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":12},{"ruleId":"103","severity":1,"message":"119","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":10},{"ruleId":"103","severity":1,"message":"120","line":4,"column":30,"nodeType":"105","messageId":"106","endLine":4,"endColumn":34},{"ruleId":"114","severity":1,"message":"121","line":66,"column":6,"nodeType":"116","endLine":66,"endColumn":70,"suggestions":"122"},{"ruleId":"103","severity":1,"message":"123","line":129,"column":9,"nodeType":"105","messageId":"106","endLine":129,"endColumn":23},{"ruleId":"103","severity":1,"message":"124","line":147,"column":10,"nodeType":"105","messageId":"106","endLine":147,"endColumn":23},{"ruleId":"103","severity":1,"message":"124","line":11,"column":10,"nodeType":"105","messageId":"106","endLine":11,"endColumn":23},{"ruleId":"103","severity":1,"message":"125","line":91,"column":18,"nodeType":"105","messageId":"106","endLine":91,"endColumn":20},{"ruleId":"114","severity":1,"message":"126","line":172,"column":5,"nodeType":"116","endLine":172,"endColumn":17,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":27,"column":1,"nodeType":"130","endLine":135,"endColumn":3},"no-unused-vars","'TestCsvComponent' is defined but never used.","Identifier","unusedVar","no-native-reassign",["131"],"no-negated-in-lhs",["132"],"'InputBase' is defined but never used.","'SearchRounded' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSearchTermLookup'. Either include it or remove the dependency array.","ArrayExpression",["133"],"'Papa' is defined but never used.","'fs' is defined but never used.","'fade' is defined but never used.","React Hook useEffect has missing dependencies: 'currPrediction', 'length', 'stock.ticker', and 'update'. Either include them or remove the dependency array.",["134"],"'handleNewStock' is assigned a value but never used.","'hasPrediction' is assigned a value but never used.","'to' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'didPredictionLookup', 'handleBackendPredictionLookup', and 'symbol'. Either include them or remove the dependency array.",["135"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [handleSearchTermLookup, searchTerm]",{"range":"142","text":"143"},"Update the dependencies array to be: [currPrediction, didPredictionLookup, handleBackendPredictionLookup, length, prediction, stock.ticker, update]",{"range":"144","text":"145"},"Update the dependencies array to be: [didPredictionLookup, handleBackendPredictionLookup, prediction, symbol]",{"range":"146","text":"147"},[1619,1631],"[handleSearchTermLookup, searchTerm]",[2230,2294],"[currPrediction, didPredictionLookup, handleBackendPredictionLookup, length, prediction, stock.ticker, update]",[4562,4574],"[didPredictionLookup, handleBackendPredictionLookup, prediction, symbol]"]