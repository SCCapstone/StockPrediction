[{"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/index.js":"1","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/reportWebVitals.js":"2","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/index.js":"3","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/navigation/index.js":"4","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/buttons.js":"5","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/components.js":"6","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/lookup.js":"7","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/navigation/lookup.js":"8","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/navigation/search.js":"9","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/navigation/components.js":"10","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/App.js":"11","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/list.js":"12","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/detail.js":"13","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/datafeed.js":"14","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/lookup/index.js":"15","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/streaming.js":"16","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/charting_library/charting_library.esm.js":"17","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/lookup/components.js":"18","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/ENV.js":"19","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/index.js":"20","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/reportWebVitals.js":"21","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/index.js":"22","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/navigation/index.js":"23","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/lookup.js":"24","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/buttons.js":"25","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/components.js":"26","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/navigation/lookup.js":"27","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/navigation/components.js":"28","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/navigation/search.js":"29","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/App.js":"30","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/list.js":"31","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/detail.js":"32","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/datafeed.js":"33","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/lookup/index.js":"34","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/streaming.js":"35","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/charting_library/charting_library.esm.js":"36","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/lookup/components.js":"37","/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/ENV.js":"38"},{"size":1109,"mtime":1617232179904,"results":"39","hashOfConfig":"40"},{"size":362,"mtime":1617232179904,"results":"41","hashOfConfig":"40"},{"size":367,"mtime":1617232179904,"results":"42","hashOfConfig":"40"},{"size":248,"mtime":1617232179904,"results":"43","hashOfConfig":"40"},{"size":509,"mtime":1617232179904,"results":"44","hashOfConfig":"40"},{"size":6128,"mtime":1617232179904,"results":"45","hashOfConfig":"40"},{"size":641,"mtime":1617232179904,"results":"46","hashOfConfig":"40"},{"size":211,"mtime":1617232179904,"results":"47","hashOfConfig":"40"},{"size":1607,"mtime":1617232179904,"results":"48","hashOfConfig":"40"},{"size":1220,"mtime":1617232179904,"results":"49","hashOfConfig":"40"},{"size":634,"mtime":1617232179880,"results":"50","hashOfConfig":"40"},{"size":2139,"mtime":1617232179904,"results":"51","hashOfConfig":"40"},{"size":4585,"mtime":1617232179904,"results":"52","hashOfConfig":"40"},{"size":4221,"mtime":1617232179904,"results":"53","hashOfConfig":"40"},{"size":72,"mtime":1617232179904,"results":"54","hashOfConfig":"40"},{"size":3791,"mtime":1617232179904,"results":"55","hashOfConfig":"40"},{"size":12276,"mtime":1617232179900,"results":"56","hashOfConfig":"40"},{"size":1528,"mtime":1617232179904,"results":"57","hashOfConfig":"40"},{"size":137,"mtime":1617232179880,"results":"58","hashOfConfig":"40"},{"size":1291,"mtime":1617317153867,"results":"59","hashOfConfig":"60"},{"size":362,"mtime":1617287361460,"results":"61","hashOfConfig":"60"},{"size":367,"mtime":1617287361460,"results":"62","hashOfConfig":"60"},{"size":287,"mtime":1617317157343,"results":"63","hashOfConfig":"60"},{"size":641,"mtime":1617287361460,"results":"64","hashOfConfig":"60"},{"size":1025,"mtime":1617386348877,"results":"65","hashOfConfig":"60"},{"size":8639,"mtime":1617386061397,"results":"66","hashOfConfig":"60"},{"size":211,"mtime":1617287361460,"results":"67","hashOfConfig":"60"},{"size":4537,"mtime":1617380025924,"results":"68","hashOfConfig":"60"},{"size":3907,"mtime":1617317943057,"results":"69","hashOfConfig":"60"},{"size":634,"mtime":1617287361452,"results":"70","hashOfConfig":"60"},{"size":2139,"mtime":1617319024739,"results":"71","hashOfConfig":"60"},{"size":4924,"mtime":1617401319754,"results":"72","hashOfConfig":"60"},{"size":4221,"mtime":1617287361460,"results":"73","hashOfConfig":"60"},{"size":72,"mtime":1617287361460,"results":"74","hashOfConfig":"60"},{"size":3791,"mtime":1617287361460,"results":"75","hashOfConfig":"60"},{"size":12276,"mtime":1617287361460,"results":"76","hashOfConfig":"60"},{"size":1528,"mtime":1617287361460,"results":"77","hashOfConfig":"60"},{"size":137,"mtime":1617287361452,"results":"78","hashOfConfig":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"1jfr6ie",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"81"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"81"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"81"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wkyei5",{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/index.js",[],["160","161"],"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/reportWebVitals.js",[],"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/index.js",[],"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/navigation/index.js",[],"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/buttons.js",[],"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/components.js",["162","163","164"],"import React, { useState, useEffect } from \"react\";\n\nimport { apiStockLookup, apiPredictionLookup } from \"./lookup\";\nimport { Stock } from \"./detail\";\nimport { StockList } from \"./list\";\nimport { ActionButton } from \"./buttons\";\n\nimport { authToken } from '../App.js';\n\n// Shows singe quote and prediction. Routes to detailed view\nexport function StockLink(props) {\n  const { \n    stock,\n    length,\n    didPredictionLookup,\n    prediction,\n    handleBackendPredictionLookup } = props;\n  const [currentPrice, setCurrentPrice] = useState(1.0);\n  const [openingPrice, setOpeningPrice] = useState(1.0);\n  const [percentChange, setPercentChange] = useState(0.0);\n  const [currPrediction, setCurrPrediction] = useState(null);\n  \n\n  const handleStockLink = (event) => {\n    event.preventDefault();\n    window.location.href = `/stocks/${stock.ticker.toUpperCase()}`;\n  };\n\n  const update = async () => {\n    const fullfilled_request = await(await (fetch(`https://finnhub.io/api/v1/quote?symbol=${stock.ticker}&token=${authToken}`))).json();\n    console.log(\"Filled\", fullfilled_request);\n    setOpeningPrice(fullfilled_request['o']);\n    setCurrentPrice(fullfilled_request['c']);\n    setPercentChange((currentPrice - openingPrice) / openingPrice);\n  };\n\n  useEffect(() => {\n    if (didPredictionLookup === false && !currPrediction) {\n\t\t  apiPredictionLookup(stock.ticker, handleBackendPredictionLookup);\n\t\t};\n    if (prediction && !currPrediction) {\n      setCurrPrediction(prediction);\n    }\n    const interval = setInterval(() => {\n      update();\n    }, 5000 * length);\n    return () => {\n      setCurrPrediction(null);\n      clearInterval(interval);\n    }\n  }, [didPredictionLookup, handleBackendPredictionLookup, prediction]);\n  \n  return (\n    <div onClick={handleStockLink} className=\"border m-3 p-3\">\n      <h5>{stock.ticker}</h5>\n      <h6>{stock.company_name}</h6> \n      <div onClick={handleStockLink}>\n        {currentPrice.toFixed(2)} ({percentChange >= 0 && <span>+</span>}{(percentChange * 100).toFixed(2)}%)\n      </div>\n    </div>\n  );\n}\n\nexport function StockListComponent(props) {\n  const [newStocks, setNewStocks] = useState([]);\n  const handleNewStock = (newStock) => {\n    let tempNewStocks = [...newStocks];\n    tempNewStocks.unshift(newStock);\n    setNewStocks(tempNewStocks);\n  };\n  return (\n    <div className={props.className}>\n      <StockList newStocks={newStocks} {...props} />\n    </div>\n  );\n}\n\nexport function StockDetailComponent(props) {\n  const { tickerinit } = props;\n  const [didStockLookup, setDidStockLookup] = useState(false);\n  const [ticker, setTicker] = useState(null);\n  const [isTracking, setIsTracking] = useState(false);\n  const [hasPrediction, setHasPrediction] = useState(false);\n  const [prediction, setPrediction] = useState(null);\n  const [didPredictionLookup, setDidPredictionLookup] = useState(false);\n\n  const handleBackendStockLookup = (response, status) => {\n    if (status === 200) {\n      setTicker(response.ticker);\n      setIsTracking(response.is_tracking);\n    } else {\n      alert(\"Error finding stock\");\n    }\n  };\n\n  const handleBackendPredictionLookup = (response, status) => {\n    if (status === 200) {\n      const responsePrediction = response.prediction;\n      const newPrediction =\n        responsePrediction !== null\n          ? {\n              future_value: responsePrediction.future_value,\n              upper_value: responsePrediction.upper_value,\n              lower_value: responsePrediction.lower_value,\n              prediction_date: response.prediction_date,\n            }\n          : null;\n      setPrediction(newPrediction);\n      setHasPrediction(true);\n      setDidPredictionLookup(true);\n    } else {\n      alert(\"Unable to find prediction\");\n    }\n  };\n\n  const handleActionBackend = (response, status) => {\n    if (status === 200 && isTracking) {\n      setIsTracking(false);\n      setHasPrediction(false);\n      setPrediction(null);\n      setTicker(response.ticker);\n    } else if (status === 200 && !isTracking) {\n      setIsTracking(true);\n    } else if (status === 201 && isTracking) {\n      //console.log(\"New pred\", response);\n      const prediction = response.prediction;\n      const newPrediction = {\n        future_value: prediction.future_value,\n        upper_value: prediction.upper_value,\n        lower_value: prediction.lower_value,\n        prediction_date: response.prediction_date,\n      };\n      setPrediction(newPrediction);\n      setHasPrediction(true);\n    } else {\n      alert(\"cant add/remove, status:\", status);\n    }\n  };\n\n  useEffect(() => {\n    if (didStockLookup === false) {\n      apiStockLookup(tickerinit, handleBackendStockLookup);\n      setDidStockLookup(true);\n    }\n  }, [tickerinit, didStockLookup, setDidStockLookup]);\n  return ticker === null ? null : (\n    <div>\n      <Stock\n        symbol={ticker}\n        didPredictionLookup={didPredictionLookup}\n        prediction={prediction}\n        handleBackendPredictionLookup={handleBackendPredictionLookup} \n        className={props.className} />\n      <PredictionComponent\n        ticker={ticker}\n        didPredictionLookup={didPredictionLookup}\n        prediction={prediction}\n        handleBackendPredictionLookup={handleBackendPredictionLookup}\n      />\n      <ActionButton\n        ticker={ticker}\n        predict={false}\n        isTracking={isTracking}\n        handleActionBackend={handleActionBackend}\n      />\n      {isTracking && (\n        <ActionButton\n          ticker={ticker}\n          predict={true}\n          isTracking={isTracking}\n          handleActionBackend={handleActionBackend}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction PredictionComponent(props) {\n  const {\n    ticker,\n    prediction,\n    didPredictionLookup,\n    handleBackendPredictionLookup,\n  } = props;\n\n  useEffect(() => {\n    if (!didPredictionLookup) {\n      apiPredictionLookup(ticker, handleBackendPredictionLookup);\n    }\n  });\n\n  return prediction !== null ? (\n    <div>\n      Prediction: {prediction.future_value.toFixed(2)} Range: {prediction.lower_value.toFixed(2)} -{\" \"}\n      {prediction.upper_value.toFixed(2)} on {prediction.prediction_date}\n    </div>\n  ) : null;\n}\n","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/lookup.js",[],"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/navigation/lookup.js",[],"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/navigation/search.js",[],"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/navigation/components.js",[],"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/App.js",[],"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/list.js",["165"],"import React, { useEffect, useState } from \"react\";\n\nimport { apiStockList } from \"./lookup\";\n\nimport { StockLink } from \"./components\";\n\nexport function StockList(props) {\n  const [stocksInit, setStocksInit] = useState([]);\n  const [stocks, setStocks] = useState([]);\n  const [stocksDidSet, setStocksDidSet] = useState(false);\n  const [hasPrediction, setHasPrediction] = useState(false);\n  const [prediction, setPrediction] = useState(null);\n  const [didPredictionLookup, setDidPredictionLookup] = useState(false);\n\n  const handleBackendPredictionLookup = (response, status) => {\n    if (status === 200) {\n      const responsePrediction = response.prediction;\n      const newPrediction =\n        responsePrediction !== null\n          ? {\n              future_value: responsePrediction.future_value,\n              upper_value: responsePrediction.upper_value,\n              lower_value: responsePrediction.lower_value,\n              prediction_date: response.prediction_date,\n            }\n          : null;\n      setPrediction(newPrediction);\n      setHasPrediction(true);\n      setDidPredictionLookup(true);\n    } else {\n      alert(\"Unable to find prediction\");\n    }\n  };\n\n  useEffect(() => {\n    const final = [...props.newStocks].concat(stocksInit);\n    if (final.length !== stocks.length) {\n      setStocks(final);\n    }\n  }, [props.newStocks, stocks, stocksInit]);\n\n  useEffect(() => {\n    if (stocksDidSet === false) {\n      const handleStockListLookup = (response, status) => {\n        if (status === 200) {\n          setStocksInit([...response]);\n          setStocksDidSet(true);\n        } else {\n          alert(\"Error, status:\", status);\n        }\n      };\n      apiStockList(handleStockListLookup);\n    }\n  }, [stocksInit, stocksDidSet, setStocksDidSet]);\n\n  return (\n    <div>\n      {stocks !== null &&\n        stocks.map((item, index) => <StockLink \n          key={index}\n          stock={item}\n          length={stocks.length}\n          didPredictionLookup={didPredictionLookup}\n          prediction={prediction}\n          handleBackendPredictionLookup={handleBackendPredictionLookup}/>\n        )\n      }\n    </div>\n  );\n}\n","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/detail.js",["166","167"],"import { widget } from '../charting_library';\nimport React, { useEffect } from \"react\";\nimport Datafeed from \"./datafeed.js\"\nimport { apiPredictionLookup } from \"./lookup\";\n\nfunction getLanguageFromURL() {\n\tconst regex = new RegExp('[\\\\?&]lang=([^&#]*)');\n\tconst results = regex.exec(window.location.search);\n\treturn results === null ? null : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n}\nfunction americanDateToUnixTimestamp(date) {\n\t// mm/dd/yyyy to yyyy-mm-dd to Javascript timestamp (ms) to Unix timestamp (s)\n\tlet fields = date.split('/');\n\tdate = fields[2] + '-' + fields[0] + '-' + fields[1];\n\treturn new Date(date).getTime() / 1000;\n}\nconst defaultSettings = {\n\tsymbol: 'AAPL',\n\tinterval: 'D',\n\tcontainerId: 'tv_chart_container',\n\tdatafeedUrl: 'https://demo_feed.tradingview.com',\n\tlibraryPath: '/charting_library/',\n\tchartsStorageUrl: 'https://saveload.tradingview.com',\n\tchartsStorageApiVersion: '1.1',\n\tclientId: 'tradingview.com',\n\tuserId: 'public_user_id',\n\tfullscreen: false,\n\tautosize: false,\n\tstudiesOverrides: {},\n};\nlet currPrediction = null;\nlet tvWidget = null;\nexport function Stock(props) {\n\tconst {\n\t\tsymbol,\n\t\tprediction,\n\t\tdidPredictionLookup,\n\t\thandleBackendPredictionLookup\n\t} = props;\n\tuseEffect(() => {\n\t\tconst widgetOptions = {\n\t\t\tsymbol: symbol ? symbol : defaultSettings.symbol, // Could throw warning here\n\t\t\t// BEWARE: no trailing slash is expected in feed URL\n\t\t\tdatafeed: Datafeed,\n\t\t\tinterval: defaultSettings.interval,\n\t\t\tcontainer_id: defaultSettings.containerId,\n\t\t\tlibrary_path: defaultSettings.libraryPath,\n\t\t\tlocale: getLanguageFromURL() || 'en',\n\t\t\tdisabled_features: [\n\t\t\t\t'use_localstorage_for_settings', \n\t\t\t\t'left_toolbar', \n\t\t\t\t'header_symbol_search', \n\t\t\t\t'display_market_status', \n\t\t\t\t'header_screenshot', \n\t\t\t\t'header_compare', \n\t\t\t\t'header_indicators', \n\t\t\t\t'compare_symbol', \n\t\t\t\t'header_saveload', \n\t\t\t\t'create_volume_indicator_by_default', \n\t\t\t\t'control_bar', \n\t\t\t\t'show_chart_property_page', \n\t\t\t\t'countdown'\n\t\t\t],\n\t\t\tenabled_features: ['study_templates'],\n\t\t\tcharts_storage_url: defaultSettings.chartsStorageUrl,\n\t\t\tcharts_storage_api_version: defaultSettings.chartsStorageApiVersion,\n\t\t\tclient_id: defaultSettings.clientId,\n\t\t\tuser_id: defaultSettings.userId,\n\t\t\tfullscreen: defaultSettings.fullscreen,\n\t\t\tautosize: defaultSettings.autosize,\n\t\t\tstudies_overrides: defaultSettings.studiesOverrides,\n\t\t};\n\t\ttvWidget = new widget(widgetOptions);\n\t\tif (didPredictionLookup === false && !currPrediction) {\n\t\t  apiPredictionLookup(symbol, handleBackendPredictionLookup);\n\t\t};\n\t\tif (prediction) {\n\t\t\tif (!currPrediction) {\n\t\t\t\tcurrPrediction = prediction;\n\t\t\t\tconsole.log(\"prediction set\")\n\t\t\t\tconsole.log(currPrediction);\n\t\t\t}\n\t\t}\n\t\tif (currPrediction !== null && tvWidget !== null) {\n\t\t\tconst currTime = new Date().getTime() / 1000;\n\t\t\tconst predTime = americanDateToUnixTimestamp(currPrediction.prediction_date);\n\t\t\ttvWidget.onChartReady(() => {\n\t\t\t\tconst chart = tvWidget.chart();\n\t\t\t\tconst {from, to} = chart.getVisibleRange();\n\t\t\t\tchart.setVisibleRange({from: from, to: predTime});\n\t\t\t\ttry {\n\t\t\t\t\tchart.createMultipointShape(\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\ttime: currTime,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}, \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttime: predTime,\n\t\t\t\t\t\t\tprice: currPrediction.upper_value,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}], \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshape: 'trend_line',\n\t\t\t\t\t\t\tlock: true,\n\t\t\t\t\t\t\toverrides: {\n\t\t\t\t\t\t\t\tlinecolor: '#00ff00',\n\t\t\t\t\t\t\t\tlinestyle: 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, null\n\t\t\t\t\t);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tchart.createMultipointShape(\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\ttime: currTime,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}, \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttime: predTime, \n\t\t\t\t\t\t\tprice: currPrediction.lower_value,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}], \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshape: 'trend_line', \n\t\t\t\t\t\t\tlock: true,\n\t\t\t\t\t\t\toverrides: {\n\t\t\t\t\t\t\t\tlinecolor: '#ff0000',\n\t\t\t\t\t\t\t\tlinestyle: 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, null\n\t\t\t\t\t);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tchart.createMultipointShape(\n\t\t\t\t\t\t[{\n\t\t\t\t\t\t\ttime: currTime,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}, \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttime: predTime, \n\t\t\t\t\t\t\tprice: currPrediction.future_value,\n\t\t\t\t\t\t\tchannel: 'close'\n\t\t\t\t\t\t}], \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tshape: 'trend_line', \n\t\t\t\t\t\t\tlock: true,\n\t\t\t\t\t\t\toverrides: {\n\t\t\t\t\t\t\t\tlinecolor: '#000000',\n\t\t\t\t\t\t\t\tlinestyle: 2\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, null\n\t\t\t\t\t);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t}\n\t\treturn () => {\n\t\t\tif (tvWidget !== null) {\n\t\t\t\ttvWidget.remove();\n\t\t\t\ttvWidget = null;\n\t\t\t}\n\t\t\tcurrPrediction = null;\n\t\t}\n\t}, [prediction]);\n\n\treturn (\n\t\t<div\n\t\t\tid={ defaultSettings.containerId }\n\t\t\tclassName={ 'TVChartContainer' }\n\t\t/>\n\t);\n}","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/datafeed.js",["168"],"import { subscribeOnStream, unsubscribeFromStream } from './streaming.js'\nimport { authToken } from '../App.js'\nconst finnhub = require('finnhub');\n\nconst api_key = finnhub.ApiClient.instance.authentications['api_key'];\napi_key.apiKey = authToken;\n\nconst lastBarsCache = new Map();\n\nconst configurationData = {\n    supported_resolutions: ['1D', '1W', '1M'], // Will need to check if these resolutions are valid\n    exchanges: [\n        {\n            value: 'NYSE',\n            name: 'NYSE',\n            desc: 'New York Stock Exchange'\n        }\n    ],\n    symbol_types: [\n        {\n            name: 'Common Stock',\n            value: 'stock'\n        }\n    ]\n};\n\nexport default {\n    onReady: (\n        callback\n    ) => {\n        setTimeout(() => callback(configurationData));\n    },\n    resolveSymbol: async (\n        symbolName,\n        onSymbolResolvedCallback,\n        onResolveErrorCallback\n    ) => {\n        const symbols = await (await fetch(`https://finnhub.io/api/v1/stock/symbol?exchange=US&token=${authToken}`)).json();\n        //console.log(\"SYMBOLS:\", symbols);\n        const symbolItem = symbols.find(({ displaySymbol }) => symbolName === displaySymbol);\n        //console.log(\"FOUND SYMBOL:\", symbolItem);\n        if (!symbolItem) {\n            onResolveErrorCallback(`Cannot resolve symbol: ${symbolName}`);\n            return;\n        }\n        const symbolInfo = {\n            ticker: symbolItem.symbol,\n            name: symbolItem.displaySymbol,\n            description: symbolItem.description,\n            type: symbolItem.type,\n            session: '24x7',\n            timezone: 'Etc/UTC',\n            exchange: \"NYSE\",\n            minmov: 1,\n            pricescale: 100,\n            has_intraday: false,\n            has_no_volume: true,\n            has_weekly_and_monthly: false,\n            supported_resolutions: configurationData.supported_resolutions,\n            volume_precision: 2,\n            data_status: 'streaming',\n        };\n        onSymbolResolvedCallback(symbolInfo);\n    },\n    getBars: async (\n        symbolInfo,\n        resolution,\n        from,\n        to,\n        onHistoryCallback,\n        onErrorCallback,\n        firstDataRequest\n    ) => {\n        const TV2FinnhubResolutions = {\"1D\":\"D\", \"1W\":\"W\", \"1M\":\"M\"};\n        const request = require('request');\n\n        await request(`https://finnhub.io/api/v1/stock/candle?symbol=${symbolInfo.ticker}&resolution=${TV2FinnhubResolutions[resolution]}&from=${from}&to=${to}&token=${authToken}`,\n            { json: true },\n            (error, response, data) => {\n                if (error) {\n                    onErrorCallback(error);\n                    return;\n                }\n                if (data[\"s\"] === \"no_data\") {\n                    onHistoryCallback([], {noData: true});\n                    return;\n                }\n                const len = data['t'].length;\n                let bars = [];\n                for (var i = 0; i < len; i += 1) {\n                    bars = [...bars, {\n                        time: data['t'][i] * 1000,\n                        low: data['l'][i],\n                        high: data['h'][i],\n                        open: data['o'][i],\n                        close: data['c'][i]\n                    }];\n                }\n                if (firstDataRequest) {\n                    lastBarsCache.set(symbolInfo.displaySymbol, { ...bars[bars.length - 1] })\n                }\n                //console.log(\"GETBARS:\", bars);\n                onHistoryCallback(bars, {noData: false});\n        }); \n    },\n    searchSymbols: async (\n        userInput,\n        exchange,\n        symbolType,\n        onResultReadyCallback\n    ) => {\n        console.log(\"SEARCHED\");\n    },\n    subscribeBars: (\n        symbolInfo,\n        resolution,\n        onRealtimeCallback,\n        subscribeUID,\n        onResetCacheNeededCallback\n    ) => {\n        subscribeOnStream(\n            symbolInfo.ticker,\n            resolution,\n            onRealtimeCallback,\n            subscribeUID,\n            onResetCacheNeededCallback,\n            lastBarsCache.get(symbolInfo.ticker)\n        );\n    },\n    unsubscribeBars: (\n        subscriberUID\n    ) => {\n        unsubscribeFromStream(subscriberUID);\n    }\n};\n","/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/lookup/index.js",[],"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/stocks/streaming.js",[],"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/charting_library/charting_library.esm.js",[],"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/lookup/components.js",[],"/home/max/Desktop/School/492/Testing/Testing/StockPrediction/stockpre-web/src/ENV.js",[],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/index.js",["169"],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/reportWebVitals.js",[],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/index.js",[],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/navigation/index.js",[],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/lookup.js",[],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/buttons.js",["170"],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/components.js",["171","172","173"],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/navigation/lookup.js",[],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/navigation/components.js",["174","175"],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/navigation/search.js",["176","177","178","179","180"],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/App.js",[],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/list.js",["181"],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/detail.js",["182","183"],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/datafeed.js",["184"],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/lookup/index.js",[],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/stocks/streaming.js",[],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/charting_library/charting_library.esm.js",[],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/lookup/components.js",[],"/home/max/Desktop/School/492/Testing/Testing/Testing/stockpre-web/src/ENV.js",[],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":51,"column":6,"nodeType":"191","endLine":51,"endColumn":70,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":66,"column":9,"nodeType":"195","messageId":"196","endLine":66,"endColumn":23},{"ruleId":"193","severity":1,"message":"197","line":83,"column":10,"nodeType":"195","messageId":"196","endLine":83,"endColumn":23},{"ruleId":"193","severity":1,"message":"197","line":11,"column":10,"nodeType":"195","messageId":"196","endLine":11,"endColumn":23},{"ruleId":"193","severity":1,"message":"198","line":89,"column":18,"nodeType":"195","messageId":"196","endLine":89,"endColumn":20},{"ruleId":"189","severity":1,"message":"199","line":170,"column":5,"nodeType":"191","endLine":170,"endColumn":17,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":27,"column":1,"nodeType":"203","endLine":135,"endColumn":3},{"ruleId":"193","severity":1,"message":"204","line":10,"column":48,"nodeType":"195","messageId":"196","endLine":10,"endColumn":64},{"ruleId":"193","severity":1,"message":"205","line":4,"column":30,"nodeType":"195","messageId":"196","endLine":4,"endColumn":34},{"ruleId":"189","severity":1,"message":"190","line":52,"column":6,"nodeType":"191","endLine":52,"endColumn":70,"suggestions":"206"},{"ruleId":"193","severity":1,"message":"194","line":115,"column":9,"nodeType":"195","messageId":"196","endLine":115,"endColumn":23},{"ruleId":"193","severity":1,"message":"197","line":133,"column":10,"nodeType":"195","messageId":"196","endLine":133,"endColumn":23},{"ruleId":"193","severity":1,"message":"207","line":9,"column":8,"nodeType":"195","messageId":"196","endLine":9,"endColumn":12},{"ruleId":"193","severity":1,"message":"208","line":10,"column":8,"nodeType":"195","messageId":"196","endLine":10,"endColumn":10},{"ruleId":"193","severity":1,"message":"209","line":1,"column":39,"nodeType":"195","messageId":"196","endLine":1,"endColumn":48},{"ruleId":"193","severity":1,"message":"210","line":3,"column":10,"nodeType":"195","messageId":"196","endLine":3,"endColumn":22},{"ruleId":"193","severity":1,"message":"211","line":11,"column":10,"nodeType":"195","messageId":"196","endLine":11,"endColumn":23},{"ruleId":"212","severity":1,"message":"213","line":18,"column":23,"nodeType":"214","messageId":"215","endLine":18,"endColumn":25},{"ruleId":"193","severity":1,"message":"216","line":83,"column":7,"nodeType":"195","messageId":"196","endLine":83,"endColumn":15},{"ruleId":"193","severity":1,"message":"197","line":11,"column":10,"nodeType":"195","messageId":"196","endLine":11,"endColumn":23},{"ruleId":"193","severity":1,"message":"198","line":93,"column":18,"nodeType":"195","messageId":"196","endLine":93,"endColumn":20},{"ruleId":"189","severity":1,"message":"199","line":174,"column":5,"nodeType":"191","endLine":174,"endColumn":17,"suggestions":"217"},{"ruleId":"201","severity":1,"message":"202","line":27,"column":1,"nodeType":"203","endLine":135,"endColumn":3},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currPrediction', 'length', 'stock.ticker', and 'update'. Either include them or remove the dependency array.","ArrayExpression",["220"],"no-unused-vars","'handleNewStock' is assigned a value but never used.","Identifier","unusedVar","'hasPrediction' is assigned a value but never used.","'to' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'didPredictionLookup', 'handleBackendPredictionLookup', and 'symbol'. Either include them or remove the dependency array.",["221"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'TestCsvComponent' is defined but never used.","'fade' is defined but never used.",["222"],"'Papa' is defined but never used.","'fs' is defined but never used.","'TextField' is defined but never used.","'Autocomplete' is defined but never used.","'searchResults' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'testList' is assigned a value but never used.",["223"],"no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"224","fix":"228"},{"desc":"226","fix":"229"},"Update the dependencies array to be: [currPrediction, didPredictionLookup, handleBackendPredictionLookup, length, prediction, stock.ticker, update]",{"range":"230","text":"231"},"Update the dependencies array to be: [didPredictionLookup, handleBackendPredictionLookup, prediction, symbol]",{"range":"232","text":"233"},{"range":"234","text":"231"},{"range":"235","text":"233"},[1658,1722],"[currPrediction, didPredictionLookup, handleBackendPredictionLookup, length, prediction, stock.ticker, update]",[4468,4480],"[didPredictionLookup, handleBackendPredictionLookup, prediction, symbol]",[1798,1862],[4577,4589]]